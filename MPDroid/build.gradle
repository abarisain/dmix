/*
 * Copyright (C) 2010-2015 The MPDroid Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */



buildscript {
    repositories {
        maven { url 'http://download.crashlytics.com/maven' }
    }

    dependencies {
        classpath 'com.crashlytics.tools.gradle:crashlytics-gradle:1.+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'crashlytics'

repositories {
    mavenCentral()
    maven { url 'http://download.crashlytics.com/maven' }
}

def gitShortHash() {
    return "git rev-parse --short HEAD".execute().text.replace("\n", "")
}

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 21
        versionCode 54
        versionName "1.07.2 Final " + gitShortHash()
    }

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
        }
    }

    productFlavors {
        closedbits {
            versionName defaultConfig.versionName + "-c"
        }

        foss {
            versionName defaultConfig.versionName + "-f"
            ext.enableCrashlytics = false
        }
    }

    applicationVariants.all { variant ->

        task("${variant.name}Javadoc", type: Javadoc) {
            title = "$name $versionName"
            description "Generates Javadoc for $variant.name."
            source = variant.javaCompile.source
            ext.androidJar =
                    "${android.plugin.sdkHandler.sdkFolder}" +
                            "/platforms/${android.compileSdkVersion}/android.jar"
            classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)

            options {
                author = true
                header = project.name
                memberLevel = JavadocMemberLevel.PRIVATE
                links("http://docs.oracle.com/javase/7/docs/api/");
                linksOffline("http://developer.android.com/reference",
                        "${android.plugin.sdkHandler.sdkFolder}/docs/reference");
                overview = "src/main/overview.html";
                showAll()
            }

            exclude '**/BuildConfig.java'
            exclude '**/R.java'
        }
    }
}

dependencies {
    // Support Libraries
    compile 'com.android.support:support-v4:21.0.3'
    compile 'com.android.support:palette-v7:21.0.3'
    compile 'com.android.support:appcompat-v7:21.0.3'
    compile 'com.android.support:cardview-v7:21.0.3'
    // Projects
    compile project(':JMPDCommAndroid')
    // Libraries from maven
    compile 'com.github.chrisbanes.actionbarpulltorefresh:library:0.9.9'
    compile 'asia.ivity.android:drag-sort-listview:1.0'
    compile 'com.melnykov:floatingactionbutton:1.1.0'
    closedbitsCompile 'com.crashlytics.android:crashlytics:1.+'
}